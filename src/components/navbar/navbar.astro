---
import Container from "@/components/container.astro";
import { Icon } from "astro-icon/components";

export interface Props {
  lang: "en" | "ko";
}

const { lang } = Astro.props;

const menuitems = [
  {
    title: lang === "ko" ? "템플릿" : "Templates",
    path: lang === "ko" ? "/ko/templates" : "/templates",
    icon: "bx:grid-alt",
  },
  {
    title: lang === "ko" ? "블로그" : "Blog",
    path: lang === "ko" ? "/ko/blog" : "/blog",
    icon: "ri:book-line",
  },
  {
    title: lang === "ko" ? "소개" : "About",
    path: lang === "ko" ? "/ko/about" : "/about",
    icon: "bx:user",
  },
  {
    title: lang === "ko" ? "함께 만들기" : "Let’s Talk",
    path: lang === "ko" ? "/ko/contact" : "/contact",
    icon: "ri:mail-line",
  }
];
---

<Container>
  <header class="w-full py-4 px-4">
    <div class="flex justify-between items-center w-full">
      <!-- Left: Logo -->
      <a href={lang === "ko" ? "/ko" : "/"} class="text-xl font-bold text-slate-800">
        <span class="text-black">nam</span><span class="text-slate-500">darine</span>
      </a>

      <!-- Right: Desktop Menu + Language -->
      <div class="hidden lg:flex items-center gap-6">
        <nav>
          <ul class="flex gap-4 text-base text-slate-600 font-medium">
            {menuitems.map((item) => (
              <li>
                <a href={item.path} class="flex items-center gap-2 hover:text-black transition">
                  <Icon name={item.icon} class="w-5 h-5" />
                  <span>{item.title}</span>
                </a>
              </li>
            ))}
          </ul>
        </nav>

        <!-- Language dropdown -->
        <div class="relative group">
          <button class="flex items-center gap-2 text-gray-600 hover:text-black transition">
            <Icon name={lang === "ko" ? "circle-flags:kr" : "circle-flags:us"} class="w-5 h-5" />
            <span class="text-sm">{lang === "ko" ? "한국어" : "English"}</span>
            <Icon name="mdi:chevron-down" class="w-4 h-4" />
          </button>
          <div class="absolute right-0 mt-2 hidden group-hover:block bg-white border rounded shadow text-sm text-slate-600">
            <a href="/"
               class="block px-4 py-2 hover:bg-slate-100 flex items-center gap-2">
              <Icon name="circle-flags:us" class="w-4 h-4" /> English
            </a>
            <a href="/ko"
               class="block px-4 py-2 hover:bg-slate-100 flex items-center gap-2">
              <Icon name="circle-flags:kr" class="w-4 h-4" /> 한국어
            </a>
          </div>
        </div>
      </div>

      <!-- Mobile: Language + Toggle Button -->
      <div class="flex gap-3 lg:hidden">
        <div class="relative group">
          <button class="text-gray-600 hover:text-black transition">
            <Icon name={lang === "ko" ? "circle-flags:kr" : "circle-flags:us"} class="w-6 h-6" />
          </button>
          <div class="absolute right-0 mt-2 hidden group-hover:block bg-white border rounded shadow text-sm text-slate-600">
            <a href="/" class="block px-4 py-2 hover:bg-slate-100 flex items-center gap-2">
              <Icon name="circle-flags:us" class="w-4 h-4" /> English
            </a>
            <a href="/ko" class="block px-4 py-2 hover:bg-slate-100 flex items-center gap-2">
              <Icon name="circle-flags:kr" class="w-4 h-4" /> 한국어
            </a>
          </div>
        </div>
        <button id="mobile-toggle" class="text-gray-800" aria-label="Toggle Menu">
          <Icon name="mdi:menu" class="w-6 h-6" />
        </button>
      </div>
    </div>

    <!-- Mobile Menu (Toggle below header) -->
    <nav id="mobile-menu" class="hidden lg:hidden mt-4">
      <ul class="flex flex-col gap-3 text-base text-slate-600 font-medium">
        {menuitems.map((item) => (
          <li>
            <a href={item.path} class="flex items-center gap-2 py-2 px-2 hover:text-black transition">
              <Icon name={item.icon} class="w-5 h-5" />
              <span>{item.title}</span>
            </a>
          </li>
        ))}
      </ul>
    </nav>
  </header>
</Container>

<script is:script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggle = document.getElementById('mobile-toggle');
    const menu = document.getElementById('mobile-menu');

    if (toggle && menu) {
      toggle.addEventListener('click', () => {
        menu.classList.toggle('hidden');
      });
    }
  });
</script>